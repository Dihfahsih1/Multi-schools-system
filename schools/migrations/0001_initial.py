# Generated by Django 2.2.4 on 2019-11-27 05:28

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('national_ID', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100)),
                ('religion', models.CharField(blank=True, choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('Others', 'Others')], max_length=100, null=True)),
                ('present_address', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_address', models.CharField(blank=True, max_length=100, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=100, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('other_info', models.TextField(max_length=200)),
                ('photo', models.ImageField(upload_to='avatars/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('joining_date', models.DateField(auto_now=True, null=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_guardian', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_image', models.ImageField(null=True, upload_to='about/')),
                ('about', models.TextField(max_length=500)),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'About',
                'verbose_name_plural': 'About',
            },
        ),
        migrations.CreateModel(
            name='AbsentEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('absent_user', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('template', models.CharField(max_length=100)),
                ('absent_date', models.DateField(null=True)),
                ('subject', models.CharField(max_length=100)),
                ('email_body', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='AbsentSMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('absent_user', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('template', models.CharField(max_length=100)),
                ('absent_date', models.DateField(null=True)),
                ('SMS', models.TextField(max_length=300)),
                ('gateway', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Airtel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tel_no', models.CharField(max_length=100)),
                ('is_active', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('photo', models.ImageField(upload_to='avatars/')),
            ],
            options={
                'verbose_name': 'Airtel',
                'verbose_name_plural': 'Airtel',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_title', models.CharField(max_length=100)),
                ('book_ID', models.CharField(max_length=100)),
                ('ISBN_no', models.CharField(max_length=100)),
                ('edition', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=100)),
                ('almira_no', models.CharField(max_length=100)),
                ('book_cover', models.ImageField(upload_to='cover')),
                ('created', models.DateField(auto_now=True, verbose_name='Created')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('border_color', models.CharField(max_length=130)),
                ('top_background', models.CharField(max_length=130)),
                ('card_school_name', models.CharField(max_length=130)),
                ('school_name_font_size', models.CharField(max_length=130)),
                ('school_name_color', models.CharField(max_length=130)),
                ('school_address', models.CharField(max_length=130)),
                ('school_address_color', models.CharField(max_length=130)),
                ('admit_card_font_size', models.CharField(max_length=130)),
                ('admit_card_color', models.CharField(max_length=130)),
                ('admit_card_background', models.CharField(max_length=130)),
                ('title_font_size', models.CharField(max_length=130)),
                ('title_color', models.CharField(max_length=130)),
                ('value_font_size', models.CharField(max_length=130)),
                ('value_color', models.CharField(max_length=130)),
                ('exam_font_size', models.CharField(max_length=130)),
                ('exam_color', models.CharField(max_length=130)),
                ('subject_font_size', models.CharField(max_length=130)),
                ('subject_color', models.CharField(max_length=130)),
                ('bottom_signature', models.CharField(max_length=130)),
                ('signature_background', models.CharField(max_length=130)),
                ('signature_color', models.CharField(max_length=130)),
                ('signature_align', models.CharField(max_length=130)),
                ('admit_card_logo', models.ImageField(null=True, upload_to='card/')),
            ],
        ),
        migrations.CreateModel(
            name='CertificateType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_name', models.CharField(max_length=100)),
                ('school_name', models.CharField(max_length=100)),
                ('certificate_text', models.TextField(max_length=400)),
                ('footer_left_text', models.CharField(max_length=100)),
                ('footer_middle_text', models.CharField(max_length=100)),
                ('footer_right_text', models.CharField(max_length=100)),
                ('background', models.ImageField(null=True, upload_to='background/')),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.CharField(max_length=130)),
                ('numeric_name', models.CharField(max_length=130)),
                ('note', models.CharField(max_length=130)),
            ],
            options={
                'verbose_name': ('classroom',),
                'verbose_name_plural': 'classrooms',
                'ordering': ('classroom',),
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=130)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Dispatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_Title', models.CharField(max_length=100)),
                ('reference', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('from_Title', models.CharField(max_length=100)),
                ('dispatch_date', models.DateField(max_length=100)),
                ('note', models.TextField(max_length=100)),
                ('postal_Attachment', models.FileField(upload_to='attachments/')),
            ],
            options={
                'verbose_name': 'Dispatch',
                'verbose_name_plural': 'Dispatches',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('receiver', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('subject', models.CharField(max_length=100)),
                ('email_body', models.TextField(max_length=300)),
                ('attachment', models.FileField(null=True, upload_to='attachment/')),
                ('send_time', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
        ),
        migrations.CreateModel(
            name='EmailSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_protocol', models.CharField(blank=True, choices=[('Mail', 'Mail'), ('Sendmail', 'Sendmail'), ('smtp', 'smtp')], max_length=100)),
                ('email_type', models.CharField(blank=True, choices=[('Text', 'Text'), ('Html', 'Html')], max_length=100)),
                ('char_set', models.CharField(blank=True, choices=[('utf-8', 'utf-8'), ('iso-8859-1', 'iso-8859-1')], max_length=100)),
                ('priority', models.CharField(blank=True, choices=[('Highest', 'Highest'), ('Normal', 'Normal'), ('Lowest', 'Lowest')], max_length=100)),
                ('email_from_name', models.CharField(max_length=300)),
                ('email_from_address', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(max_length=100)),
                ('event_for', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('event_place', models.CharField(max_length=100)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(null=True)),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('note', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_title', models.CharField(max_length=100)),
                ('start_date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='ExamGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_grade', models.CharField(max_length=100)),
                ('grade_point', models.CharField(max_length=100)),
                ('mark_from', models.CharField(max_length=100)),
                ('mark_to', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenditureHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expenditure_head', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(max_length=300)),
                ('is_publish', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(choices=[('Tuition', 'Tuition'), ('Hostel', 'Hostel'), ('Transport', 'Transport')], max_length=100)),
                ('fee_title', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_title', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
            options={
                'verbose_name': 'Gallery',
                'verbose_name_plural': 'Galleries',
            },
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('holiday_title', models.CharField(max_length=100)),
                ('from_date', models.DateField(null=True)),
                ('to_date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Hostel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostel_name', models.CharField(max_length=100)),
                ('hostel_type', models.CharField(choices=[('Single - Boys', 'Single - Boys'), ('Single - Girls', 'Single - Girls'), ('Mixed', 'Mixed')], max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
                ('created', models.DateField(auto_now=True, verbose_name='Created')),
            ],
        ),
        migrations.CreateModel(
            name='IncomeHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income_head', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(null=True, upload_to='avatar/')),
                ('library_ID', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('classroom', models.CharField(max_length=100)),
                ('section', models.CharField(max_length=100)),
                ('roll_no', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('call_duration', models.CharField(max_length=100)),
                ('call_date', models.DateField(max_length=100)),
                ('follow_up', models.CharField(max_length=100)),
                ('call_type', models.CharField(choices=[('Incoming', 'Incoming'), ('Outgoing', 'Outgoing')], max_length=100)),
                ('note', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('receiver', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('sender', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('subject', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('message', models.TextField(max_length=300)),
                ('send_time', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
        ),
        migrations.CreateModel(
            name='MTN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tel_no', models.CharField(max_length=100)),
                ('is_active', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('photo', models.ImageField(upload_to='avatars/')),
            ],
            options={
                'verbose_name': 'MTN',
                'verbose_name_plural': 'MTN',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news_title', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('image', models.ImageField(null=True, upload_to='images/')),
                ('news', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
            options={
                'verbose_name': 'News',
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notice_title', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('notice_for', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('notice', models.TextField(max_length=300)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_location', models.CharField(choices=[('Header', 'Header'), ('Footer', 'Footer')], max_length=100)),
                ('page_title', models.CharField(max_length=100)),
                ('page_description', models.TextField(max_length=300)),
                ('page_image', models.ImageField(null=True, upload_to='images/')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
        ),
        migrations.CreateModel(
            name='Paypal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paypal_email', models.CharField(max_length=100)),
                ('is_demo', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('paypal_extra_charge', models.CharField(max_length=100)),
                ('is_active', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('photo', models.ImageField(upload_to='avatars/')),
            ],
        ),
        migrations.CreateModel(
            name='Pesa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tel_no', models.CharField(max_length=100)),
                ('is_active', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('photo', models.ImageField(upload_to='avatars/')),
            ],
            options={
                'verbose_name': 'Pesa',
                'verbose_name_plural': 'Pesa',
            },
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visitor_purpose', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Receive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_Title', models.CharField(max_length=100)),
                ('reference', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('from_Title', models.CharField(max_length=100)),
                ('receive_date', models.DateField(max_length=100)),
                ('note', models.TextField(max_length=100)),
                ('postal_Attachment', models.FileField(upload_to='attachments/')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('note', models.CharField(max_length=130)),
                ('is_default', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_title', models.CharField(max_length=100)),
                ('route_start', models.CharField(max_length=100)),
                ('route_end', models.CharField(max_length=100)),
                ('stop_name', models.CharField(max_length=100)),
                ('stop_km', models.CharField(max_length=100)),
                ('stop_fare', models.CharField(max_length=100)),
                ('note', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_name', models.CharField(max_length=100)),
                ('basic_salary', models.CharField(max_length=100)),
                ('house_rent', models.CharField(max_length=100)),
                ('transport_allowance', models.CharField(max_length=100)),
                ('medical_allowance', models.CharField(max_length=100)),
                ('over_time_hourly_pay', models.CharField(max_length=100)),
                ('provident_fund', models.CharField(max_length=100)),
                ('hourly_rate', models.CharField(max_length=100)),
                ('total_allowance', models.CharField(max_length=100)),
                ('total_deduction', models.CharField(max_length=100)),
                ('gross_salary', models.CharField(max_length=100)),
                ('net_salary', models.CharField(max_length=100)),
                ('note', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_code', models.CharField(blank=True, max_length=130, null=True)),
                ('school_name', models.CharField(max_length=130)),
                ('address', models.CharField(max_length=130)),
                ('phone', models.CharField(max_length=130)),
                ('registration_date', models.DateField(blank=True, null=True)),
                ('email_address', models.EmailField(max_length=120)),
                ('fax', models.CharField(blank=True, max_length=130, null=True)),
                ('footer', models.CharField(blank=True, max_length=130, null=True)),
                ('currency', models.CharField(blank=True, max_length=130, null=True)),
                ('currency_symbol', models.CharField(max_length=130)),
                ('enable_frontend', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('exam_final_result', models.CharField(choices=[('Average of all exams', 'Average of all exams'), ('Only based on final exams', 'Only based on final exams')], max_length=130)),
                ('latitude', models.CharField(blank=True, max_length=130, null=True)),
                ('longitude', models.CharField(blank=True, max_length=130, null=True)),
                ('api_key', models.CharField(blank=True, max_length=130, null=True)),
                ('online_Admission', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=130)),
                ('facebook_url', models.URLField(blank=True, max_length=130, null=True)),
                ('twitter_url', models.URLField(blank=True, max_length=130, null=True)),
                ('linkedIn_url', models.URLField(blank=True, max_length=130, null=True)),
                ('google_plus_url', models.URLField(blank=True, max_length=130, null=True)),
                ('youtube_url', models.URLField(blank=True, max_length=130, null=True)),
                ('instagram_url', models.URLField(blank=True, max_length=130, null=True)),
                ('pinterest_url', models.URLField(blank=True, max_length=130, null=True)),
                ('frontend_Logo', models.ImageField(upload_to='logo/')),
                ('backend_Logo', models.ImageField(upload_to='logo/')),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=130, null=True)),
                ('theme', models.CharField(choices=[('Black', 'Black'), ('Navy Blue', 'Navy Blue'), ('Red', 'Red'), ('Maroon', 'Maroon')], max_length=130)),
            ],
            options={
                'verbose_name': 'school',
                'verbose_name_plural': 'schools',
                'ordering': ('school_name',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=130)),
                ('note', models.CharField(max_length=130)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
                'ordering': ('section',),
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=130)),
                ('brand_title', models.CharField(max_length=130)),
                ('language', models.CharField(max_length=130)),
                ('enable_RTL', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('enable_Frontend', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('general_Theme', models.CharField(max_length=130)),
                ('default_time_zone', models.CharField(max_length=130)),
                ('date_format', models.DateField(default=datetime.datetime.now, null=True)),
                ('brand_logo', models.ImageField(upload_to='logo/')),
                ('favicon_icon', models.ImageField(upload_to='icon/')),
                ('brand_footer', models.CharField(max_length=130)),
                ('google_Analytics', models.CharField(max_length=130)),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slider_image', models.ImageField(null=True, upload_to='sliders/')),
                ('image_title', models.CharField(max_length=100)),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
        ),
        migrations.CreateModel(
            name='SMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('receiver', models.CharField(blank=True, choices=[('Superuser', 'Superuser'), ('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Admin', 'Admin'), ('Receptionist', 'Receptionist'), ('Librarian', 'Librarian'), ('Accountant', 'Accountant'), ('Staff', 'Staff'), ('Servant', 'Servant')], max_length=20)),
                ('SMS', models.TextField(max_length=300)),
                ('gateway', models.CharField(max_length=100)),
                ('send_time', models.DateTimeField(auto_now=True, verbose_name='Modified')),
            ],
            options={
                'verbose_name': 'SMS',
                'verbose_name_plural': 'SMS',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_no', models.CharField(max_length=100, unique=True)),
                ('admission_date', models.DateField(null=True)),
                ('relation_With_Guardian', models.CharField(blank=True, choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Sister', 'Sister'), ('Bother', 'Bother'), ('Uncle', 'Uncle'), ('Maternal Uncle', 'Maternal Uncle'), ('Aunt', 'Aunt'), ('Other Relative', 'Other Relative')], max_length=100, null=True)),
                ('group', models.CharField(blank=True, choices=[('Science', 'Science'), ('Arts', 'Arts'), ('Commerce', 'Commerce')], max_length=100, null=True)),
                ('roll_no', models.CharField(max_length=100, unique=True)),
                ('registration_no', models.CharField(blank=True, max_length=100, null=True)),
                ('discount', models.CharField(blank=True, max_length=100, null=True)),
                ('second_language', models.CharField(blank=True, max_length=100, null=True)),
                ('caste', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_school', models.CharField(blank=True, max_length=100, null=True)),
                ('previous_class', models.CharField(blank=True, max_length=100, null=True)),
                ('transfer_certificate', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('father_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('father_education', models.CharField(blank=True, max_length=100, null=True)),
                ('father_profession', models.CharField(blank=True, max_length=100, null=True)),
                ('father_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('father_photo', models.ImageField(blank=True, null=True, upload_to='avatar/')),
                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_education', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_profession', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('mother_photo', models.ImageField(blank=True, null=True, upload_to='avatar/')),
                ('health_condition', models.CharField(blank=True, max_length=100, null=True)),
                ('is_present', models.CharField(blank=True, max_length=120, null=True)),
                ('is_late', models.CharField(blank=True, max_length=120, null=True)),
                ('is_absent', models.CharField(blank=True, max_length=120, null=True)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.Classroom')),
                ('guardian', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guardians', to='schools.Guardian')),
                ('roles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.Section')),
            ],
        ),
        migrations.CreateModel(
            name='StudentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_type', models.CharField(blank=True, max_length=100)),
                ('note', models.TextField(max_length=130)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=130)),
                ('subject_code', models.CharField(max_length=130)),
                ('subject_unit', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=200)),
                ('type', models.CharField(choices=[('Mandatory', 'Mandatory'), ('Optional', 'Optional')], max_length=100)),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=200)),
                ('note', models.TextField(max_length=250)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsibility', models.CharField(max_length=200)),
                ('resume', models.FileField(upload_to='resume/')),
                ('salary_type', models.CharField(choices=[('Monthly', 'Monthly'), ('Hourly', 'Hourly')], max_length=100)),
                ('facebook_url', models.URLField(blank=True, max_length=130, null=True)),
                ('twitter_url', models.URLField(blank=True, max_length=130, null=True)),
                ('linkedIn_url', models.URLField(blank=True, max_length=130, null=True)),
                ('google_plus_url', models.URLField(blank=True, max_length=130, null=True)),
                ('youtube_url', models.URLField(blank=True, max_length=130, null=True)),
                ('instagram_url', models.URLField(blank=True, max_length=130, null=True)),
                ('pinterest_url', models.URLField(blank=True, max_length=130, null=True)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('is_present', models.CharField(blank=True, max_length=120, null=True)),
                ('is_late', models.CharField(blank=True, max_length=120, null=True)),
                ('is_absent', models.CharField(blank=True, max_length=120, null=True)),
                ('roles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
                ('salary_grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.SalaryGrade')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complain_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=100)),
                ('vehicle_model', models.CharField(max_length=100)),
                ('driver', models.CharField(max_length=100)),
                ('vehicle_licence', models.CharField(max_length=100)),
                ('vehicle_contact', models.CharField(max_length=100)),
                ('note', models.CharField(max_length=100)),
                ('created', models.DateField(auto_now=True, verbose_name='Created')),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=200, unique=True)),
                ('is_current_year', models.BooleanField(blank=True, default=False, null=True)),
                ('note', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=100)),
                ('check_in', models.DateTimeField(auto_now_add=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('to_meet_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('to_meet_user_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
                ('visitor_purpose', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Purpose')),
            ],
        ),
        migrations.CreateModel(
            name='TransportMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(null=True, upload_to='avatar/')),
                ('roll_no', models.CharField(max_length=100)),
                ('stop_Name', models.CharField(max_length=100)),
                ('stop_KM', models.CharField(max_length=100)),
                ('stop_Fare', models.CharField(max_length=100)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
                ('transport_route_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Route')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(blank=True, choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=10)),
                ('is_current_term', models.BooleanField(blank=True, default=False, null=True)),
                ('next_term_begins', models.DateField(blank=True, null=True)),
                ('year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Year')),
            ],
        ),
        migrations.CreateModel(
            name='TakenSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ca', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('exam', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('total', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('grade', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F')], max_length=1)),
                ('comment', models.CharField(blank=True, choices=[('PASS', 'PASS'), ('FAIL', 'FAIL')], max_length=200)),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taken_subjects', to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('syllabus_title', models.CharField(max_length=130)),
                ('syllabus', models.FileField(null=True, upload_to='syllabus/')),
                ('note', models.TextField(max_length=250)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('subject_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Year')),
            ],
            options={
                'verbose_name': 'Syllabus',
                'verbose_name_plural': 'Syllabus',
            },
        ),
        migrations.CreateModel(
            name='Superuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume', models.ImageField(upload_to='resume/')),
                ('roles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='superuser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjects', models.ManyToManyField(related_name='allocated_subject', to='schools.Subject')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher')),
                ('year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Year')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='student_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.StudentType'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SMSTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_title', models.CharField(max_length=100)),
                ('template', models.TextField(max_length=300)),
                ('dynamic_tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('receiver_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
            ],
        ),
        migrations.AddField(
            model_name='section',
            name='section_teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher'),
        ),
        migrations.CreateModel(
            name='Routine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('room_no', models.CharField(max_length=130)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
                ('subject_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher')),
            ],
            options={
                'verbose_name': 'Routine',
                'verbose_name_plural': 'Routine',
                'ordering': ('day', 'start_time'),
            },
        ),
        migrations.AddField(
            model_name='route',
            name='vehicle_for_route',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Vehicle'),
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_no', models.CharField(max_length=100)),
                ('room_type', models.CharField(choices=[('AC', 'AC'), ('Non AC', 'Non AC')], max_length=100)),
                ('seat_total', models.CharField(max_length=100)),
                ('cost_per_seat', models.CharField(max_length=100)),
                ('note', models.TextField(max_length=300)),
                ('created', models.DateField(auto_now=True, verbose_name='Created')),
                ('hostel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Hostel')),
            ],
        ),
        migrations.CreateModel(
            name='RolePermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general_settings', models.BooleanField(default=False)),
                ('payment_setting', models.BooleanField(default=False)),
                ('SMS_setting', models.BooleanField(default=False)),
                ('Email_setting', models.BooleanField(default=False)),
                ('theme', models.BooleanField(default=False)),
                ('language', models.BooleanField(default=False)),
                ('year', models.BooleanField(default=False)),
                ('user_role', models.BooleanField(default=False)),
                ('role_permission', models.BooleanField(default=False)),
                ('reset_user_password', models.BooleanField(default=False)),
                ('backup_database', models.BooleanField(default=False)),
                ('manage_user', models.BooleanField(default=False)),
                ('school', models.BooleanField(default=False)),
                ('payment', models.BooleanField(default=False)),
                ('SMS', models.BooleanField(default=False)),
                ('SMS_template', models.BooleanField(default=False)),
                ('email_template', models.BooleanField(default=False)),
                ('activity_log', models.BooleanField(default=False)),
                ('super_admin', models.BooleanField(default=False)),
                ('guardian_feedback', models.BooleanField(default=False)),
                ('general_setting', models.BooleanField(default=False)),
                ('user_credential', models.BooleanField(default=False)),
                ('designation', models.BooleanField(default=False)),
                ('employee', models.BooleanField(default=False)),
                ('teacher', models.BooleanField(default=False)),
                ('classroom', models.BooleanField(default=False)),
                ('section', models.BooleanField(default=False)),
                ('subject', models.BooleanField(default=False)),
                ('syllabus', models.BooleanField(default=False)),
                ('routine', models.BooleanField(default=False)),
                ('promotion', models.BooleanField(default=False)),
                ('material', models.BooleanField(default=False)),
                ('guardian', models.BooleanField(default=False)),
                ('feedback', models.BooleanField(default=False)),
                ('student', models.BooleanField(default=False)),
                ('bulk_import', models.BooleanField(default=False)),
                ('student_activity', models.BooleanField(default=False)),
                ('online_admission', models.BooleanField(default=False)),
                ('student_type', models.BooleanField(default=False)),
                ('employee_attendance', models.BooleanField(default=False)),
                ('teacher_attendance', models.BooleanField(default=False)),
                ('student_attendance', models.BooleanField(default=False)),
                ('absent_email', models.BooleanField(default=False)),
                ('absent_SMS', models.BooleanField(default=False)),
                ('assignment', models.BooleanField(default=False)),
                ('term', models.BooleanField(default=False)),
                ('grade', models.BooleanField(default=False)),
                ('schedule', models.BooleanField(default=False)),
                ('suggestion', models.BooleanField(default=False)),
                ('attendance', models.BooleanField(default=False)),
                ('mark', models.BooleanField(default=False)),
                ('mark_sheet', models.BooleanField(default=False)),
                ('result', models.BooleanField(default=False)),
                ('mark_send_by_SMS', models.BooleanField(default=False)),
                ('mark_send_by_Email', models.BooleanField(default=False)),
                ('exam_result', models.BooleanField(default=False)),
                ('final_result', models.BooleanField(default=False)),
                ('merit_list', models.BooleanField(default=False)),
                ('result_mail', models.BooleanField(default=False)),
                ('result_SMS', models.BooleanField(default=False)),
                ('result_card', models.BooleanField(default=False)),
                ('book', models.BooleanField(default=False)),
                ('member', models.BooleanField(default=False)),
                ('issue', models.BooleanField(default=False)),
                ('e_book', models.BooleanField(default=False)),
                ('vehicle', models.BooleanField(default=False)),
                ('route', models.BooleanField(default=False)),
                ('transport_member', models.BooleanField(default=False)),
                ('hostel', models.BooleanField(default=False)),
                ('room', models.BooleanField(default=False)),
                ('hostel_member', models.BooleanField(default=False)),
                ('email', models.BooleanField(default=False)),
                ('text_sms', models.BooleanField(default=False)),
                ('message', models.BooleanField(default=False)),
                ('notice', models.BooleanField(default=False)),
                ('news', models.BooleanField(default=False)),
                ('holiday', models.BooleanField(default=False)),
                ('event', models.BooleanField(default=False)),
                ('visitor', models.BooleanField(default=False)),
                ('purpose', models.BooleanField(default=False)),
                ('call', models.BooleanField(default=False)),
                ('dispatch', models.BooleanField(default=False)),
                ('receive', models.BooleanField(default=False)),
                ('office', models.BooleanField(default=False)),
                ('expenditure_head', models.BooleanField(default=False)),
                ('expenditure', models.BooleanField(default=False)),
                ('income_head', models.BooleanField(default=False)),
                ('income', models.BooleanField(default=False)),
                ('payments', models.BooleanField(default=False)),
                ('discount', models.BooleanField(default=False)),
                ('fee_type', models.BooleanField(default=False)),
                ('due_email', models.BooleanField(default=False)),
                ('due_SMS', models.BooleanField(default=False)),
                ('report', models.BooleanField(default=False)),
                ('certificate', models.BooleanField(default=False)),
                ('certificate_type', models.BooleanField(default=False)),
                ('gallery', models.BooleanField(default=False)),
                ('image', models.BooleanField(default=False)),
                ('frontend', models.BooleanField(default=False)),
                ('slider', models.BooleanField(default=False)),
                ('about', models.BooleanField(default=False)),
                ('salary_grade', models.BooleanField(default=False)),
                ('salary_payment', models.BooleanField(default=False)),
                ('history', models.BooleanField(default=False)),
                ('complain', models.BooleanField(default=False)),
                ('complain_type', models.BooleanField(default=False)),
                ('user_complain', models.BooleanField(default=False)),
                ('user_leave', models.BooleanField(default=False)),
                ('leave_management', models.BooleanField(default=False)),
                ('leave_type', models.BooleanField(default=False)),
                ('leave_application', models.BooleanField(default=False)),
                ('waiting_leave', models.BooleanField(default=False)),
                ('approve_leave', models.BooleanField(default=False)),
                ('decline_leave', models.BooleanField(default=False)),
                ('id_card', models.BooleanField(default=False)),
                ('teacher_card', models.BooleanField(default=False)),
                ('student_card', models.BooleanField(default=False)),
                ('employee_card', models.BooleanField(default=False)),
                ('card_setting', models.BooleanField(default=False)),
                ('admit_card_setting', models.BooleanField(default=False)),
                ('admit_card', models.BooleanField(default=False)),
                ('school_card_setting', models.BooleanField(default=False)),
                ('school_admit_setting', models.BooleanField(default=False)),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpa', models.FloatField(null=True)),
                ('cgpa', models.FloatField(null=True)),
                ('term', models.CharField(choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=100)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Year')),
            ],
        ),
        migrations.CreateModel(
            name='RepeatingStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Year')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('running_session', models.CharField(max_length=100)),
                ('promote_to_session', models.CharField(max_length=100)),
                ('promote_to_class', models.CharField(max_length=100)),
                ('current_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MPesa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Pesa')),
                ('MTN', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.MTN')),
                ('airtel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Airtel')),
                ('paypal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Paypal')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_title', models.CharField(max_length=130)),
                ('material', models.FileField(null=True, upload_to='material/')),
                ('description', models.TextField(max_length=250)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('mot', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('eot', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('total', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('grade', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F')], max_length=1)),
                ('comment', models.TextField(default='PASS', max_length=300)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Exam')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='ManageUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
            ],
        ),
        migrations.CreateModel(
            name='ManagePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.SalaryGrade')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_Type', models.CharField(max_length=100)),
                ('total_Leave', models.CharField(max_length=100)),
                ('applicant_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ISBN_no', models.CharField(max_length=100)),
                ('edition', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('quantity', models.CharField(max_length=100)),
                ('almira_no', models.CharField(max_length=100)),
                ('book_cover', models.ImageField(null=True, upload_to='cover/')),
                ('issue_date', models.DateField(null=True)),
                ('due_date', models.DateField(null=True)),
                ('return_date', models.DateField(null=True)),
                ('library_member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.LibraryMember')),
                ('select_book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Book')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_amount', models.CharField(max_length=100)),
                ('discount', models.CharField(blank=True, max_length=100, null=True)),
                ('month', models.CharField(max_length=100)),
                ('is_discount_applicable', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('paid_status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending')], max_length=100)),
                ('gross_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.TextField(max_length=300)),
                ('date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('fee_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.FeeType')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
                ('income_head', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.IncomeHead')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_image', models.ImageField(null=True, upload_to='images/')),
                ('image_caption', models.CharField(max_length=100)),
                ('gallery_title', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Gallery')),
            ],
        ),
        migrations.CreateModel(
            name='HostelMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(null=True, upload_to='avatar/')),
                ('roll_no', models.CharField(max_length=100)),
                ('room_type', models.CharField(choices=[('AC', 'AC'), ('Non AC', 'Non AC')], max_length=100)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('hostel_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Hostel')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('room_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Room')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
            ],
        ),
        migrations.AddField(
            model_name='guardian',
            name='roles',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role'),
        ),
        migrations.AddField(
            model_name='guardian',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='guardians', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='GenerateCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.CertificateType')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Expenditure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expenditure_method', models.CharField(max_length=100)),
                ('amount', models.CharField(max_length=100)),
                ('date', models.DateField(null=True)),
                ('note', models.TextField(max_length=300)),
                ('expenditure_head', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.ExpenditureHead')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSuggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion_title', models.CharField(max_length=300)),
                ('suggestion', models.FileField(null=True, upload_to='suggestion/')),
                ('note', models.TextField(max_length=300)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Exam')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(null=True)),
                ('start_time', models.TimeField(null=True)),
                ('end_time', models.TimeField(null=True)),
                ('room_no', models.CharField(max_length=300)),
                ('note', models.TextField(max_length=300)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Exam')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='ExamAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Exam')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary_type', models.CharField(choices=[('Monthly', 'Monthly'), ('Hourly', 'Hourly')], max_length=100)),
                ('resume', models.FileField(upload_to='resume/')),
                ('facebook_url', models.URLField(blank=True, max_length=130, null=True)),
                ('twitter_url', models.URLField(blank=True, max_length=130, null=True)),
                ('linkedIn_url', models.URLField(blank=True, max_length=130, null=True)),
                ('google_plus_url', models.URLField(blank=True, max_length=130, null=True)),
                ('youtube_url', models.URLField(blank=True, max_length=130, null=True)),
                ('instagram_url', models.URLField(blank=True, max_length=130, null=True)),
                ('pinterest_url', models.URLField(blank=True, max_length=130, null=True)),
                ('Is_View_on_Web', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('is_present', models.CharField(blank=True, max_length=120, null=True)),
                ('is_late', models.CharField(blank=True, max_length=120, null=True)),
                ('is_absent', models.CharField(blank=True, max_length=120, null=True)),
                ('designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Designation')),
                ('roles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
                ('salary_grade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.SalaryGrade')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_title', models.CharField(max_length=100)),
                ('template', models.TextField(max_length=300)),
                ('dynamic_tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('receiver_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
            ],
        ),
        migrations.CreateModel(
            name='EBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EBook_title', models.CharField(max_length=100)),
                ('edition', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('language', models.CharField(max_length=100)),
                ('cover_image', models.ImageField(upload_to='cover')),
                ('e_book', models.ImageField(upload_to='ebook')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
            options={
                'verbose_name': 'E-Book',
                'verbose_name_plural': 'E-Books',
            },
        ),
        migrations.CreateModel(
            name='DueFeeSMS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_type', models.CharField(choices=[('Guardian', 'Guardian'), ('Student', 'Student')], max_length=100)),
                ('due_fee_student', models.CharField(max_length=100)),
                ('template', models.CharField(max_length=100)),
                ('SMS', models.TextField(max_length=300)),
                ('gateway', models.CharField(max_length=100)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='DueFeeEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_role', models.CharField(choices=[('Guardian', 'Guardian'), ('Student', 'Student')], max_length=100)),
                ('due_fee_student', models.CharField(max_length=100)),
                ('template', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('email_body', models.TextField(max_length=300)),
                ('attachment', models.FileField(null=True, upload_to='attachment/')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Complain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complain_date', models.DateField(null=True)),
                ('action_date', models.DateField(null=True)),
                ('complain', models.TextField(max_length=400)),
                ('complain_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Type')),
                ('complain_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('complain_user_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='class_teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher'),
        ),
        migrations.CreateModel(
            name='CarryOverStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(blank=True, choices=[('First', 'First'), ('Second', 'Second'), ('Third', 'Third')], max_length=100, null=True)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Year')),
            ],
        ),
        migrations.CreateModel(
            name='BulkStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
            ],
        ),
        migrations.CreateModel(
            name='BulkInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_type', models.CharField(max_length=100)),
                ('student_name', models.CharField(max_length=100)),
                ('is_discount_applicable', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=100)),
                ('month', models.DateField(max_length=100)),
                ('paid_status', models.CharField(choices=[('Paid', 'Paid'), ('Pending', 'Pending')], max_length=100)),
                ('note', models.TextField(max_length=300)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_title', models.CharField(max_length=100)),
                ('deadline', models.DateField(null=True)),
                ('assignment', models.FileField(null=True, upload_to='assignment/')),
                ('note', models.TextField(max_length=300)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_Date', models.DateField(max_length=100)),
                ('leave_From', models.DateField(max_length=100)),
                ('leave_To', models.DateField(max_length=100)),
                ('status', models.CharField(choices=[('Waiting', 'Waiting'), ('New', 'New'), ('Declined', 'Declined'), ('Approved', 'Approved')], default='New', max_length=100)),
                ('leave_Reason', models.TextField(max_length=100)),
                ('leave_attachment', models.FileField(upload_to='leave/')),
                ('applicant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('applicant_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role')),
                ('leave_Type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Leave')),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_date', models.DateField(blank=True, null=True)),
                ('activity', models.TextField(max_length=130)),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Role'),
        ),
        migrations.CreateModel(
            name='TeacherAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Teacher')),
            ],
            options={
                'verbose_name': 'Teacher Attendance',
                'ordering': ['date'],
                'get_latest_by': 'date',
                'unique_together': {('date', 'teacher')},
            },
        ),
        migrations.CreateModel(
            name='StudentAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('classroom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Classroom')),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Section')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Student')),
            ],
            options={
                'verbose_name': 'Student Attendance',
                'ordering': ['date'],
                'get_latest_by': 'date',
                'unique_together': {('date', 'student')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.Employee')),
            ],
            options={
                'verbose_name': 'Employee Attendance',
                'ordering': ['date'],
                'get_latest_by': 'date',
                'unique_together': {('date', 'employee')},
            },
        ),
    ]
